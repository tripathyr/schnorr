import { deepStrictEqual, throws } from 'assert';
import { should } from 'micro-should';
import { hex } from '@scure/base';
import * as btc from '../index.js';

const p2tr_ns_vec = [
  {
    pubkeys: ['0101010101010101010101010101010101010101010101010101010101010101'],
    out: '200101010101010101010101010101010101010101010101010101010101010101ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
      '0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ad200c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0cac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
      '0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c',
      '0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ad200c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0cad200d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0dac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
      '0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c',
      '0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d',
      '0707070707070707070707070707070707070707070707070707070707070707',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ad200c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0cad200d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0dad200707070707070707070707070707070707070707070707070707070707070707ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
      '0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c',
      '0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d',
      '0707070707070707070707070707070707070707070707070707070707070707',
      '0808080808080808080808080808080808080808080808080808080808080808',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ad200c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0cad200d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0dad200707070707070707070707070707070707070707070707070707070707070707ad200808080808080808080808080808080808080808080808080808080808080808ac',
  },
  {
    pubkeys: [
      '0101010101010101010101010101010101010101010101010101010101010101',
      '0202020202020202020202020202020202020202020202020202020202020202',
      '1010101010101010101010101010101010101010101010101010101010101010',
      '1212121212121212121212121212121212121212121212121212121212121212',
      '0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c',
      '0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d',
      '0707070707070707070707070707070707070707070707070707070707070707',
      '0808080808080808080808080808080808080808080808080808080808080808',
      '0909090909090909090909090909090909090909090909090909090909090909',
    ],
    out: '200101010101010101010101010101010101010101010101010101010101010101ad200202020202020202020202020202020202020202020202020202020202020202ad201010101010101010101010101010101010101010101010101010101010101010ad201212121212121212121212121212121212121212121212121212121212121212ad200c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0cad200d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0dad200707070707070707070707070707070707070707070707070707070707070707ad200808080808080808080808080808080808080808080808080808080808080808ad200909090909090909090909090909090909090909090909090909090909090909ac',
  },
];

for (let i = 0; i < p2tr_ns_vec.length; i++) {
  const t = p2tr_ns_vec[i];
  should(`p2tr_ns(${i})`, () => {
    const pubkeys = t.pubkeys.map(hex.decode);
    const parsedScript = btc.OutScript.decode(hex.decode(t.out));
    deepStrictEqual(parsedScript.type, 'tr_ns');
    deepStrictEqual(parsedScript.pubkeys, pubkeys);
    deepStrictEqual(btc.OutScript.encode(parsedScript), hex.decode(t.out));
  });
}

should('p2tr_ns test', () => {
  const p = [
    '0101010101010101010101010101010101010101010101010101010101010101',
    '0202020202020202020202020202020202020202020202020202020202020202',
  ].map(hex.decode);
  throws(() => btc.OutScript.decode(btc.Script.encode([p[0], 'CHECKSIGVERIFY', 'CHECKSIG'])));
  throws(() =>
    btc.OutScript.decode(
      btc.Script.encode([p[0], 'CHECKSIGVERIFY', p[1], 'CHECKSIGVERIFY', 'CHECKSIG'])
    )
  );
});

should('p2ms', () => {
  // Found in some vectors
  const script = hex.decode(
    '208f891aaf2e2d7b146178c54a87e2aeddd9d1d686692257928e67cf08174ff375ac20395f8129dd63b4a5c2f12124eaa05b7a7ed30f70e51fb93305deecc542e7f9ebba20a8ab37bc1609d834c3913b3538dad1c84d7f9b6a835ffc175777915a37ae3572ba539c'
  );
  console.log(btc.Script.decode(script));
  deepStrictEqual(btc.OutScript.decode(script), {
    type: 'tr_ms',
    m: 3,
    pubkeys: [
      '8f891aaf2e2d7b146178c54a87e2aeddd9d1d686692257928e67cf08174ff375',
      '395f8129dd63b4a5c2f12124eaa05b7a7ed30f70e51fb93305deecc542e7f9eb',
      'a8ab37bc1609d834c3913b3538dad1c84d7f9b6a835ffc175777915a37ae3572',
    ].map(hex.decode),
  });
  deepStrictEqual(
    btc.OutScript.encode({
      type: 'tr_ms',
      m: 3,
      pubkeys: [
        '8f891aaf2e2d7b146178c54a87e2aeddd9d1d686692257928e67cf08174ff375',
        '395f8129dd63b4a5c2f12124eaa05b7a7ed30f70e51fb93305deecc542e7f9eb',
        'a8ab37bc1609d834c3913b3538dad1c84d7f9b6a835ffc175777915a37ae3572',
      ].map(hex.decode),
    }),
    script
  );
});

const SCRIPTS = [
  '207acba5e9b94f4bea9cfeb9b8d4bf6719a01c93d28301902eb5b0ec34b499b975ac',
  '206efc407bbda50fa347f075f9dcfd5d0b54d23160a02e4015772f89b162d63140ac',
  '208f891aaf2e2d7b146178c54a87e2aeddd9d1d686692257928e67cf08174ff375ac20395f8129dd63b4a5c2f12124eaa05b7a7ed30f70e51fb93305deecc542e7f9ebba20a8ab37bc1609d834c3913b3538dad1c84d7f9b6a835ffc175777915a37ae3572ba539c',
  '20051febcbf1e6b01f5b0c4ca9935c7b639556a95db9738d05c9b62443c04f615cac',
  '20051febcbf1e6b01f5b0c4ca9935c7b639556a95db9738d05c9b62443c04f615cac',
  '20ab5b27c5945f5978bc08c8c549aa1b1b77a56d659e2fd42a7e5c9a42d4d8106dac20db3b59f1ae0350d9ed9a2bbda0bbec4e2b9ff23685b56da20c47a449f1299dc3ba207c67cb155126d0a74abc990883e67e5ca0cad1cd00004a73bd36ca60224f6967ba539c',

  '00140df3a65e853279600af8952606dc9c18f4d622e0',
  '00142f2ca4720ea62c3d8226843dde511a4318bd7447',
  '00144fa2aca128b6f9dee5309c4f70051e49c65fd732',
  '001479b000887626b294a914501a4cd226b58b235983',
  '0014a6366f1659517ec2af9001e468f5defade311785',
  '0014bc881a83b1d9bbb46377fba09890bf3079599806',
  '0014e2c66ea573f1aa172c381d60849c41bc7e1771eb',
  '002021b56c5e26d75f0b02eee7b0a8c02f8f3297747e3f86dacd280b25d60bdacec0',
  '00208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903',
  '0020b61f681387037c2e5a579f158245b90a9b47b08c69a58cc957c0b9913e9a4e8f',
  '21033a4ae0d7985fec7204e2b29e30f70443c3abb10df1bad95e37b8f3c831b215f0ac',
  '21035f3609c59c43d2f6ce0f63f2396dece95a2004cd0e0345301281d49d78c334e9ac',
  '512015ad7571fd7563e3c6ce5d14c52e7bf3ca65779cc494097d618d0eb531e11f34',
  '5120165ac03696c983244bcd5321a33ad51caafaac6af3eded9b43edd3c884d1841e',
  '51203cb05efdddfddb69665e34c8b79d9bf4d1b51c50c2f63ccf0939f5d75006f134',
  '5120559c78fad1de39171bd230c99cecadace9cd3862f5b92d0c74c520d4641e4b5e',
  '51207098bf6090d3bdceb1ea64532188101bff9f1262ecd918ec3bf1475b9a24384b',
  '51209421e734b0f9d2c467ea7dd197c61acb4467cdcbc9f4cb0c571f8b63a5c40cae',
  '5120a7ef4922515b9f7670a93cfca78514ef7a897d097816f343bb205ae7514c9bf9',
  '5221026928a14e07a3eb3c985102d690f9c1c7af2639418222e5dc59b643300adb8561210201c61774a03fcdaa86fa8ca6d365b932c784bb730ec99cd29356103113363feb210205225f93dd9f74bc114637cb982470ab50ee03beb3865569150ec05e1330548b53ae',
  '5221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae',
  '522102c59aea3b806f0e8e099a3b9007b82ff53af0daad0b75e91ed510a53c764451082102e17ef86febd11775cb8325f219e8e6139541d5fdd163f211794820c8d1e074b62103e76abb5182f4909d2276c9d46ec123d70dd5373f5610c2162c2bb5f37c6b94442103bde0e66feb23c3e2411949906ab9803b14fb0005967a500b5e56e130edf571ce54ae',
  '522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae',
  '52210318c645ad658904822edf715d57d43e662b747dca0139d812ee8a00da1d9095b02102e03341e0d987bdf48416df4cfce56972600a1d89cae8bfb9f4b493cc2a279e4521028c83a960127c919c6219f7478fe0c9ae45d4f711c3b8fa2ac9126e724c28a4a353ae',
  '76a9142f2ca4720ea62c3d8226843dde511a4318bd744788ac',
  '76a91479b000887626b294a914501a4cd226b58b23598388ac',
  '76a9148bbc95d2709c71607c60ee3f097c1217482f518d88ac',
  '76a9149597358d95a7b139a4d39ecbae2b9e1860525a2188ac',
  '76a9149e7ef1767764ff34a0595dbc4c2b70db017ed06688ac',
  '76a914c7e76dfd05f4bdceb6f052dbe9013c23b9ae0b1988ac',
  '76a914e2152c3d79c100335f3d160e6b412e7e0f11812f88ac',
  'a9140fb9463421696b82c833af241c78c17ddbde493487',
  'a9145d87cc24e4d46217b54643865be22f159756053287',
  'a9148a10dec7a1fa7198ce423b303c39cee48223113287',
  'a9149335e587a9af4836f4a7435db449978973ee894a87',
  'a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e887',
  'a914fc288dc5821f6a04f5d5233262c2ddb74aff179687',
];
// TODO: there were tapscripts with csv?

for (const s of SCRIPTS) {
  should(`script=${s}`, () => {
    const d = hex.decode(s);
    const parsed = btc.OutScript.decode(d);
    // if (parsed.type === 'unknown') {
    //   const hs = hex.decode(s);
    //   console.log(parsed, btc.Script.decode(hs));
    //   console.log('W', btc.OutScript.decode(hex.decode(s)));
    //   throw new Error('wat?');
    // }
    deepStrictEqual(btc.OutScript.encode(btc.OutScript.decode(d)), d);
  });
}

// ESM is broken.
import url from 'url';
if (import.meta.url === url.pathToFileURL(process.argv[1]).href) {
  should.run();
}
